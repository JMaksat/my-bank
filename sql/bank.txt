1. Customers
create table bank.customer_info (
customer_id serial,
first_name varchar(64), 
last_name varchar(64),
middle_name varchar(64),
birth_date date,
personal_id varchar(64),
is_resident boolean,
date_modified date,
is_active boolean,
user_id varchar(32)
)

insert into bank.customer_info (first_name, last_name, middle_name, birth_date, personal_id, is_resident, date_modified, is_active, user_id)
values (
'MyBank',
'First',
'Branch',
'2015-12-31', -- {d '2006-04-13'}
'US123BANK#LICENSE',
true,
null,
true,
user
)

create table bank.customer_address (
address_id serial,
value varchar(1024),
date_crated date,
date_modified date,
is_active boolean,
user_id varchar(32),
address_type integer,
)

insert into bank.customer_address (address_type, value, date_crated, date_modified, is_active, user_id)
values (
8,
'USA, NY, New Yark City, 123',
now(),
null,
true,
user
)

create table bank.customer_contacts (
contact_id serial,
contact_group varchar(64),
contact_type varchar(64),
value varchar(1024),
date_created date,
date_modified date,
is_active boolean,
user_id varchar(32)
)

insert into bank.customer_contacts (contact_type, value, date_created, date_modified, is_active, user_id)
values (
13,
'scott@gmail.com',
now(),
null,
true,
user
)

2. Accounts
- Bank account structure: BBB DDMMYYYY CCCCC TTT (e.g. 0032812201500152056). BBB - branch, DDMMYYYY - open date, CCCCC - counter which start from 0 every business day, TTT - type of the account (buffer, personal, interest, system)
create table bank.accounts (
account_id serial,
account_number varchar(32),
account_type integer,
account_owner integer,
date_opened date,
date_closed date,
date_created date,
date_modified date,
user_id varchar(32),
is_suspended boolean
)

insert into bank.accounts (account_number, account_type, account_owner, date_opened, date_closed, date_created, date_modified, user_id, is_suspended)
values (
'0010101201600004017',
17,
0,
'2016-01-01',
null,
now(),	
null,
user,
false
)

create table bank.account_rest (
rest_id serial,
account_id integer,
rest_sum real,
transaction_id integer,
rest_date date,
rest_time time
)

insert into bank.account_rest (account_id, rest_sum, transaction_id, rest_date, rest_time)
values (
4,
1000000,
0,
now(),
now()
)

3. Transactions
- Domestic transactions. Domestic transaction can be fullfilled from one account (dropdown-list) to second.
- Transactions between banks. If transaction is incoming, then first account should be foreign and second is domestic. If transaction is outgoing, then the first account is domestic and second is foreign.
- Transactions between banks should use special one buffer account.
- Transaction contains several types of operations: Money transfer (incoming, outgoing, between domestic accounts...always from right to left), Refill, Withdrawal
create table bank.transactions (
transaction_id serial,
operation_type integer,
account_debit varchar(32),
account_credit varchar(32),
is_reversed boolean,
transaction_sum real,
transaction_date date,
transaction_time time,
user_id varchar(32)
)

insert into bank.transactions (operation_type, account_debit, account_credit, is_reversed, transaction_sum, transaction_date, transaction_time, user_id)
values (
2,
2,
3,
false,
0,
now(),
now(),
user
)


3. Bank parameters
create table bank.bank_parameters (
parameter_id serial,
parent_id integer,
parameter_name varchar(64),
value varchar(1024),
date_created date,
date_modified date,
active_from date,
active_to date,
user_id varchar(32)
)


3. Directory table
create table bank.directory(
dir_id serial,
dir_group varchar(64),
dir_type varchar(64),
description varchar(1024),
date_created date,
date_modified date,
is_active boolean,
user_id varchar(32)
)

insert into bank.directory (dir_group, dir_type, description, date_created, date_modified, is_active, user_id) 
values (
'ACCOUNTS',
'SYSTEM',
'System accounts',
now(),
null,
true,
user
)